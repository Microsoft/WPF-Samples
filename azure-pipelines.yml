# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

variables:

  - name: solution
    value: 'WPFSamples.sln'
  - name: LangVersion
    value: preview

trigger:
- master
- release/*
- future/*
- netframework

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Windows
    pool:
     vmImage: 'windows-latest'
    variables:
     - name: _Configuration
       value: Debug
     - name: _Platform
       value: x86
     - name: _ToolPlatform
       value: x86
    strategy:
     matrix:
      Build_Debug_AnyCPU:
        _Configuration: Debug
        _Platform: "Any CPU"
      Build_Release_AnyCPU:
        _Configuration: Release
        _Platform: "Any CPU"
      Build_Debug_x86:
        _Configuration: Debug
        _Platform: x86
      Build_Release_x86:
        _Configuration: Release
        _Platform: x86
      Build_Debug_x64:
        _Configuration: Debug
        _Platform: x64
        _ToolPlatform: x64
      Build_Release_x64:
        _Configuration: Release
        _Platform: x64
        _ToolPlatform: x64 
    steps:
     - task: NuGetToolInstaller@1
       displayName: 'Download and Cache Nuget tool'

     - task: NuGetCommand@2
       displayName: 'Restore Samples Using NuGet'
       inputs:
        restoreSolution: '$(solution)'
        
     - task: VSBuild@1
       continueOnError: true
       displayName: 'Build .NET Framework Samples using VSBuild'
       inputs:
        vsVersion: latest
        solution: '$(solution)'
        platform: '$(_Platform)'
        msbuildArchitecture: '$(_ToolPlatform)'
        configuration: '$(_Configuration)'
        msbuildArgs: /m /bl:"$(Build.ArtifactStagingDirectory)\vsbuild\vsbuild.$(_Configuration).$(_Platform).binlog" /p:LangVersion=$(LangVersion)

     - task: PublishBuildArtifacts@1
       continueOnError: true
       displayName: 'Publish .VSBuild Build Logs'
       inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)\vsbuild
        ArtifactName: 'Build Logs'
        publishLocation: 'Container'

